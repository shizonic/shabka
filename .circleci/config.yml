var_0: &global_env
  PLACEHOLDER: for_future_use

var_1: &install-nix
  run:
    name: Install Nix
    command: |
      curl https://nixos.org/nix/install | sh

var_2: &install-dependencies
  run:
    name: Install dependencies
    command: |
      if [[ -r "${HOME}/.nix-profile/etc/profile.d/nix.sh" ]]; then
        source "${HOME}/.nix-profile/etc/profile.d/nix.sh"
      fi

      # install git and bash
      nix-env -f '<nixpkgs>' -i -A gitAndTools.git -A bash

var_3: &install-cachix
  run:
    name: Install Cachix
    shell: /usr/bin/env bash -euxo pipefail
    command: |
      if [[ -r "${HOME}/.nix-profile/etc/profile.d/nix.sh" ]]; then
        source "${HOME}/.nix-profile/etc/profile.d/nix.sh"
      fi

      # install cachix from nixpkgs at stable
      readonly shabka_path="$( pwd )"
      release="$( tr -d "\n" < "${shabka_path}/release" )"

      source "${shabka_path}/bin/shabka"
      nix_path="$( getNixPath "${release}" '' )" || exit "${?}"
      export NIX_PATH="${nix_path}"

      nix-env -f '<nixpkgs>' -iA cachix

var_4: &enable-cachix
  run:
    name: Enable cachix
    command: |
      if [[ -r "${HOME}/.nix-profile/etc/profile.d/nix.sh" ]]; then
        source "${HOME}/.nix-profile/etc/profile.d/nix.sh"
      fi

      cachix use "${CACHIX_CACHE}"

var_5: &download-dotshabka
  run:
    name: Download dotshabka
    working_directory: ~/
    command: |
      if ! git clone "${DOTSHABKA_REPOSITORY}" -b "${CIRCLE_BRANCH}" "${HOME}/.shabka"; then
        git clone "${DOTSHABKA_REPOSITORY}" "${HOME}/.shabka"
        >&2 echo "Cloned dotshabka from the master branch"
      else
        >&2 echo "Cloned dotshabka from the ${CIRCLE_BRANCH} branch"
      fi

var_6: &build-host
  run:
    name: Building the host
    working_directory: ~/shabka
    command: |
      if [[ -r "${HOME}/.nix-profile/etc/profile.d/nix.sh" ]]; then
        source "${HOME}/.nix-profile/etc/profile.d/nix.sh"
      fi

      export DOTSHABKA_PATH="${HOME}/.shabka"

      ./bin/shabka -h "${CIRCLE_JOB}" build

var_7: &push-to-cachix
  run:
    name: Push the build to cachix
    working_directory: ~/shabka
    command: |
      if [[ -r "${HOME}/.nix-profile/etc/profile.d/nix.sh" ]]; then
        source "${HOME}/.nix-profile/etc/profile.d/nix.sh"
      fi

      # Cachix is not available for pull requests coming from a fork for security reasons.
      if [[ -z "${CACHIX_SIGNING_KEY:-}" ]]; then
        >&2 echo "CACHIX_SIGNING_KEY is not set, cannot push to cachix"
        exit 0
      fi
      if [[ -z "${CACHIX_CACHE:-}" ]]; then
        >&2 echo "CACHIX_CACHE is not set, cannot push to cachix"
        exit 0
      fi

      export DOTSHABKA_PATH="${HOME}/.shabka"

      ./bin/shabka push-to-cachix "${CACHIX_CACHE}" "${CIRCLE_JOB}"

version: 2
jobs:
  athena:
    macos:
      xcode: "9.0"

    working_directory: ~/shabka

    environment:
      <<: *global_env

    steps:
      - checkout
      - *install-nix
      - *install-dependencies
      - *install-cachix
      - *enable-cachix
      - *download-dotshabka
      - *build-host
      - *push-to-cachix

  cratos:
    working_directory: ~/shabka

    environment:
      <<: *global_env

    docker:
      - image: nixos/nix

    steps:
      - checkout
      - *install-dependencies
      - *install-cachix
      - *enable-cachix
      - *download-dotshabka
      - *build-host
      - *push-to-cachix

  hades:
    working_directory: ~/shabka

    environment:
      <<: *global_env

    docker:
      - image: nixos/nix

    steps:
      - checkout
      - *install-dependencies
      - *install-cachix
      - *enable-cachix
      - *download-dotshabka
      - *build-host
      - *push-to-cachix

  hera:
    working_directory: ~/shabka

    environment:
      <<: *global_env

    docker:
      - image: nixos/nix

    steps:
      - checkout
      - *install-dependencies
      - *install-cachix
      - *enable-cachix
      - *download-dotshabka
      - *build-host
      - *push-to-cachix

  poseidon:
    macos:
      xcode: "9.0"

    working_directory: ~/shabka

    environment:
      <<: *global_env

    steps:
      - checkout
      - *install-nix
      - *install-dependencies
      - *install-cachix
      - *enable-cachix
      - *download-dotshabka
      - *build-host
      - *push-to-cachix

  zeus:
    working_directory: ~/shabka

    environment:
      <<: *global_env

    docker:
      - image: nixos/nix

    steps:
      - checkout
      - *install-dependencies
      - *install-cachix
      - *enable-cachix
      - *download-dotshabka
      - *build-host
      - *push-to-cachix

  duck:
    working_directory: ~/shabka

    environment:
      <<: *global_env

    docker:
      - image: nixos/nix

    steps:
      - checkout
      - *install-dependencies
      - *install-cachix
      - *enable-cachix
      - *download-dotshabka
      - *build-host
      - *push-to-cachix

  goat:
    working_directory: ~/shabka

    environment:
      <<: *global_env

    docker:
      - image: archlinux/base

    steps:
      - checkout
      - *install-nix
      - *install-dependencies
      - *install-cachix
      - *enable-cachix
      - *download-dotshabka
      - *build-host
      - *push-to-cachix

  hedgehog:
    working_directory: ~/shabka

    environment:
      <<: *global_env

    docker:
      - image: nixos/nix

    steps:
      - checkout
      - *install-dependencies
      - *install-cachix
      - *enable-cachix
      - *download-dotshabka
      - *build-host
      - *push-to-cachix

workflows:
  version: 2
  testing:
    jobs:
      - athena:
          context: shabka-yl
      - cratos:
          context: shabka-yl
      - hades:
          context: shabka-yl
      - hera:
          context: shabka-yl
      - poseidon:
          context: shabka-yl
      - zeus:
          context: shabka-yl
      - duck:
          context: shabka-risson
      - goat:
          context: shabka-risson
      - hedgehog:
          context: shabka-risson
